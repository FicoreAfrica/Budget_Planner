<script type="text/javascript">
    var gk_isXlsx = false;
    var gk_xlsxFileLookup = {};
    var gk_fileData = {};
    function filledCell(cell) {
      return cell !== '' && cell != null;
    }
    function loadFileData(filename) {
    if (gk_isXlsx && gk_xlsxFileLookup[filename]) {
        try {
            var workbook = XLSX.read(gk_fileData[filename], { type: 'base64' });
            var firstSheetName = workbook.SheetNames[0];
            var worksheet = workbook.Sheets[firstSheetName];

            // Convert sheet to JSON to filter blank rows
            var jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1, blankrows: false, defval: '' });
            // Filter out blank rows (rows where all cells are empty, null, or undefined)
            var filteredData = jsonData.filter(row => row.some(filledCell));

            // Heuristic to find the header row by ignoring rows with fewer filled cells than the next row
            var headerRowIndex = filteredData.findIndex((row, index) =>
              row.filter(filledCell).length >= filteredData[index + 1]?.filter(filledCell).length
            );
            // Fallback
            if (headerRowIndex === -1 || headerRowIndex > 25) {
              headerRowIndex = 0;
            }

            // Convert filtered JSON back to CSV
            var csv = XLSX.utils.aoa_to_sheet(filteredData.slice(headerRowIndex)); // Create a new sheet from filtered array of arrays
            csv = XLSX.utils.sheet_to_csv(csv, { header: 1 });
            return csv;
        } catch (e) {
            console.error(e);
            return "";
        }
    }
    return gk_fileData[filename] || "";
    }
</script><!DOCTYPE html>
<html lang="{{ language }}">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ translations['Budget Dashboard'] }}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body { font-family: Arial, sans-serif; color: #333; margin: 0; padding: 20px; background: linear-gradient(135deg, #E3F2FD, #F5F7FA); }
        .container { max-width: 600px; margin: 0 auto; }
        .header { background-color: #1E7F71; padding: 20px; border-radius: 10px; text-align: center; margin-bottom: 20px; box-shadow: 0 4px 12px rgba(0,0,0,0.1); }
        .header h2 { color: #FFFFFF; margin: 0; }
        .header p { font-style: italic; color: #E0F7FA; font-size: 0.9rem; margin: 5px 0 0 0; }
        .card { background: #fff; border-radius: 12px; box-shadow: 0 8px 24px rgba(0,0,0,0.1); margin-bottom: 1.5rem; padding: 1.25rem; transition: opacity 0.3s ease; opacity: 0; }
        .card.fade-in { opacity: 1; }
        h3 { color: #2E7D32; font-weight: 600; }
        ul { list-style-type: none; padding: 0; }
        li { margin-bottom: 10px; font-size: 1rem; }
        li strong { display: inline-block; width: 150px; color: #0288D1; }
        .badge { background: #42A5F5; color: white; padding: 8px 12px; border-radius: 20px; margin: 5px; font-size: 0.9rem; }
        a { padding: 10px 20px; text-decoration: none; border-radius: 5px; font-size: 0.9rem; margin-bottom: 10px; }
        .course-link { background-color: #FBC02D; color: #333; }
        .feedback-link { background-color: #2E7D32; color: white; }
        .waitlist-link { background-color: #0288D1; color: white; }
        .consultancy-link { background-color: #D81B60; color: white; }
        .linkedin-link { background-color: #0077B5; color: white; }
        .twitter-link { background-color: #1DA1F2; color: white; }
        .share-button { background: linear-gradient(135deg, #FF5722, #D81B60); border: none; padding: 10px 20px; font-weight: 500; border-radius: 8px; color: white; cursor: pointer; margin-right: 10px; }
        .budget-value { font-weight: 700; color: #2E7D32; }
        .deficit { color: #D32F2F; }
        canvas { max-width: 100%; height: auto; }
        .confetti { position: fixed; top: 0; left: 0; width: 100%; height: 100%; pointer-events: none; opacity: 0; transition: opacity 0.5s ease; }
        .confetti.active { opacity: 1; }
        .confetti-piece { position: absolute; width: 10px; height: 10px; background: #FF5722; border-radius: 50%; animation: fall 5s infinite; }
        @keyframes fall { 0% { transform: translateY(-100vh); } 100% { transform: translateY(100vh); } }
        @media (max-width: 576px) { .container { padding: 10px; } .card { padding: 1rem; } li strong { width: 100%; display: block; } }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h2>{{ translations['Budget Dashboard'] }}</h2>
            <p>{{ translations['Financial growth passport for Africa'] }}</p>
        </div>
        {% with messages = get_flashed_messages(with_categories=true) %}
            {% if messages %}
                {% for category, message in messages %}
                    <div class="alert alert-{{ 'success' if category == 'success' else 'danger' }}" role="alert">{{ message }}</div>
                {% endfor %}
            {% endif %}
        {% endwith %}
        <div class="card fade-in">
            <h3>{{ translations['Welcome'] }}, {{ first_name }}!</h3>
            <p>{{ translations['Your Budget Summary'] }}</p>
            <ul>
                <li><strong>{{ translations['Monthly Income'] }}:</strong> {{ monthly_income | format_currency('NGN') }}</li>
                <li><strong>{{ translations['Housing'] }}:</strong> {{ housing_expenses | format_currency('NGN') }}</li>
                <li><strong>{{ translations['Food'] }}:</strong> {{ food_expenses | format_currency('NGN') }}</li>
                <li><strong>{{ translations['Transport'] }}:</strong> {{ transport_expenses | format_currency('NGN') }}</li>
                <li><strong>{{ translations['Other'] }}:</strong> {{ other_expenses | format_currency('NGN') }}</li>
                <li><strong>{{ translations['Total Expenses'] }}:</strong> {{ total_expenses | format_currency('NGN') }}</li>
                <li><strong>{{ translations['Savings'] }}:</strong> {{ savings | format_currency('NGN') }}</li>
                <li><strong>{{ translations['Surplus/Deficit'] }}:</strong> <span class="budget-value {{ 'deficit' if surplus_deficit < 0 else '' }}">{{ surplus_deficit | format_currency('NGN') }}</span></li>
                <li><strong>{{ translations['Advice'] }}:</strong>
                    <ul style="list-style-type: disc; padding-left: 20px;">
                        {% if surplus_deficit >= 0 %}
                            <li>{{ translations['Great job! Save or invest your surplus to grow your wealth.'] }}</li>
                            {% if housing_expenses > monthly_income * 0.4 %}
                                <li>{{ translations['Housing costs are high. Look for cheaper rent or utilities.'] }}</li>
                            {% endif %}
                            {% if food_expenses > monthly_income * 0.3 %}
                                <li>{{ translations['Food spending is high. Try cooking at home more.'] }}</li>
                            {% endif %}
                        {% else %}
                            <li>{{ translations['Reduce non-essential spending to balance your budget.'] }}</li>
                            {% if housing_expenses > monthly_income * 0.4 %}
                                <li>{{ translations['Housing costs are high. Look for cheaper rent or utilities.'] }}</li>
                            {% endif %}
                            {% if food_expenses > monthly_income * 0.3 %}
                                <li>{{ translations['Food spending is high. Try cooking at home more.'] }}</li>
                            {% endif %}
                            {% if other_expenses > monthly_income * 0.2 %}
                                <li>{{ translations['Other spending is high. Cut back on non-essentials like clothes or entertainment.'] }}</li>
                            {% endif %}
                        {% endif %}
                    </ul>
                </li>
                <li role="status" aria-label="{{ translations['Your ranking'] }}"><strong>{{ translations['Rank'] }}:</strong> #{{ rank }} {{ translations['out of'] }} {{ total_users }} {{ translations['users'] }}</li>
            </ul>
        </div>
        <div class="card fade-in" style="margin-top: 20px;">
            <h3>{{ translations['Budget Breakdown'] }}</h3>
            <canvas id="pieChart"></canvas>
            <canvas id="barChart" style="margin-top: 20px;"></canvas>
        </div>
        <div class="card fade-in" style="margin-top: 20px;">
            <h3>{{ translations['Your Badges'] }}</h3>
            {% if badges %}
                <div role="list" aria-label="{{ translations['Earned badges'] }}">
                    {% for badge in badges %}
                        <span class="badge" role="listitem" aria-label="{{ translations.get(badge, badge) }}">{{ translations.get(badge, badge) }}</span>
                    {% endfor %}
                </div>
            {% else %}
                <p>{{ translations['No Badges Yet'] }}</p>
            {% endif %}
        </div>
        <div class="card fade-in" style="margin-top: 20px;">
            <h3>{{ translations['Quick Tips'] }}</h3>
            <ul>
                {% if surplus_deficit >= 0 %}
                    <li>{{ translations['Great job! Save or invest your surplus.'] }}</li>
                    <li>{{ translations['Keep tracking your expenses every month.'] }}</li>
                {% else %}
                    <li>{{ translations['Spend less on non-essentials to balance your budget.'] }}</li>
                    <li>{{ translations['Look for ways to earn extra income.'] }}</li>
                {% endif %}
            </ul>
        </div>
        <div class="card fade-in" style="margin-top: 20px;">
            <h3>{{ translations['Recommended Learning'] }}</h3>
            <p>{{ translations['Learn more about budgeting!'] }}</p>
            <a href="{{ course_url }}" class="course-link">{{ course_title }}</a>
        </div>
        <div class="card fade-in" style="margin-top: 20px;">
            <h3>{{ translations['Whats Next'] }}</h3>
            <p>
                <a href="{{ url_for('step1') }}" class="btn btn-primary">{{ translations['Back to Home'] }}</a>
                <a href="{{ FEEDBACK_FORM_URL }}" class="feedback-link">{{ translations['Provide Feedback'] }}</a>
                <a href="{{ WAITLIST_FORM_URL }}" class="waitlist-link">{{ translations['Join Waitlist'] }}</a>
                <a href="{{ CONSULTANCY_FORM_URL }}" class="consultancy-link">{{ translations['Book Consultancy'] }}</a>
                <a href="{{ linkedin_url }}" class="linkedin-link">{{ translations['Connect on LinkedIn'] }}</a>
                <a href="{{ twitter_url }}" class="twitter-link">{{ translations['Follow on Twitter'] }}</a>
                <form action="{{ url_for('send_budget_email') }}" method="POST" style="display: inline;">
                    <input type="hidden" name="user_data_json" value="{{ user_data_json }}">
                    <button type="submit" class="btn btn-primary">{{ translations['Send Email Report'] }}</button>
                </form>
                <button class="share-button" id="share-button">{{ translations['Share Your Results'] }}</button>
            </p>
            <p>{{ translations['Contact Us'] }} <a href="mailto:ficore.ai.africa@gmail.com">{{ translations['Click to Email'] }}</a> {{ translations['for support'] }}</p>
            <p>© 2025 Ficore Africa. All rights reserved.</p>
        </div>
        <div class="confetti" id="confetti">
            {% for i in range(50) %}
                <div class="confetti-piece" style="left: {{ i * 2 }}%; animation-delay: {{ i * 0.1 }}s;"></div>
            {% endfor %}
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const cards = document.querySelectorAll('.card');
            cards.forEach((card, index) => {
                setTimeout(() => card.classList.add('fade-in'), index * 200);
            });

            const pieCtx = document.getElementById('pieChart').getContext('2d');
            new Chart(pieCtx, {
                type: 'pie',
                data: {{ chart_data | safe }},
                options: { responsive: true, plugins: { legend: { position: 'top' }, title: { display: true, text: '{{ translations['Budget Breakdown'] }}' } } }
            });

            const barCtx = document.getElementById('barChart').getContext('2d');
            new Chart(barCtx, {
                type: 'bar',
                data: {{ bar_data | safe }},
                options: { responsive: true, scales: { y: { beginAtZero: true } }, plugins: { legend: { display: false }, title: { display: true, text: '{{ translations['Income vs Expenses'] }}' } } }
            });

            document.getElementById('share-button').addEventListener('click', () => {
                const monthlyIncome = {{ monthly_income | tojson }};
                const totalExpenses = {{ total_expenses | tojson }};
                const surplusDeficit = {{ surplus_deficit | tojson }};
                const shareText = `${translations['My Budget']}\n${translations['Monthly Income']}: ₦${formatCurrency(monthlyIncome)}\n${translations['Total Expenses']}: ₦${formatCurrency(totalExpenses)}\n${translations['Surplus/Deficit']}: ₦${formatCurrency(surplusDeficit)}\n${translations['Check yours at']}: ${window.location.origin}`;
                if (navigator.share) {
                    navigator.share({ title: translations['My Budget Results'], text: shareText, url: window.location.origin })
                        .catch(error => console.error('Error sharing:', error));
                } else {
                    navigator.clipboard.writeText(shareText)
                        .then(() => alert(translations['Results copied to clipboard']))
                        .catch(error => { console.error('Error copying:', error); alert(translations['Failed to copy results']); });
                }
            });

            function formatCurrency(value) {
                return parseFloat(value).toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,');
            }

            // Confetti animation on load
            const confetti = document.getElementById('confetti');
            setTimeout(() => confetti.classList.add('active'), 500);
            setTimeout(() => confetti.classList.remove('active'), 5000);
        });
    </script>
    {% macro format_currency(value, currency='NGN') %}
        {{ '{:,.2f}'.format(float(value)) }} {{ currency }}
    {% endmacro %}
</body>
</html>
